 ------
 Upgrade
 ------
 Olivier Lamy
 Emmanuel Venisse
 ------
 Sep 10 2008
 ------

Upgrading Continuum

    This document will help you upgrade Continuum from 1.2.x to 1.3.2.

    When upgrading Continuum, it could have some database model changes. The Data Management tool exports data from the
    old database model and imports the data into the new database model.

* Upgrading from 1.2.x to 1.3.2

    There are 2 databases that need to be considered:  one for the builds and one for the users.

    There were no changes in the users database from 1.2.x to 1.3.2, so you can simply point Continuum 1.3.2 at your
    existing user database.

    The builds database has had model changes, and will need to be exported and imported.

    First, download the Data Management tools you will need.  The tool is a standalone jar that you can download from the central repo.

    You will need to download two versions of the tool, one for the export out of the old version and one for the import into the new version:

    <<Note:>> The 1.2, 1.2.2 and 1.2.3 released versions of this tool have a bug.
     To export databases from 1.2.2 or 1.2.3, you will need to use version 1.2.3.1 of the tool.
     To export databases from 1.2, you may use the 1.1 version of the tool.

        * {{http://repo1.maven.org/maven2/org/apache/continuum/data-management-cli/1.3.2/data-management-cli-1.3.2-app.jar}}

        * {{http://repo1.maven.org/maven2/org/apache/continuum/data-management-cli/1.2.3.1/data-management-cli-1.2.3.1-app.jar}}

        * {{http://repo1.maven.org/maven2/org/apache/maven/continuum/data-management-cli/1.1/data-management-cli-1.1-app.jar}}


    Next, follow these steps to export data from the old version

        * Stop the old version of Continuum

        * Execute this command to create the builds.xml export file

+------------------------------------------+
java -Xmx512m -jar data-management-cli-1.2.x-app.jar -buildsJdbcUrl jdbc:derby:${old.continuum.home}/data/databases/continuum -mode EXPORT -directory backups
+------------------------------------------+

    Then, follow these steps to import the data to the new version


        * Start the new version of Continuum to create the new data model, but do not configure it.

        * Stop Continuum

        * Execute this command to import the builds data from the xml file you created earlier:

+------------------------------------------+
java -Xmx512m -jar data-management-cli-1.3.2-app.jar -buildsJdbcUrl jdbc:derby:${new.continuum.home}/data/databases/continuum -mode IMPORT -directory backups
+------------------------------------------+
        
        []
 
        Finally, be aware that sometimes the NEXT_VAL values in the SEQUENCE_TABLE need to be adjusted.

            * Before starting Continuum for the first time after the import, connect to the db with a client like {{{http://squirrel-sql.sourceforge.net/}Squirrel SQL}} and check the values in the <<NEXT_VAL>> column of the SEQUENCE_TABLE.

            * Values must be greater than the max id value in each table.

            * For example, the next value of "org.apache.maven.continuum.model.Project" must be greater than the greatest id in Project table.

            * Here are some example SQL statements.  You may need to add or remove lines depending on the contents of your database.

+-----------------------------------------+
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(systemconfiguration_id)+1 from SYSTEMCONFIGURATION) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.system.SystemConfiguration';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(id)+1 from BUILDQUEUE) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.project.BuildQueue';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(id)+1 from SCHEDULE) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.project.Schedule';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(id)+1 from BUILDDEFINITION) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.project.BuildDefinition';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(id)+1 from LOCALREPOSITORY) WHERE SEQUENCE_NAME='org.apache.continuum.model.repository.LocalRepository';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(id)+1 from PROJECTGROUP) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.project.ProjectGroup';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(scmresult_id)+1 from SCMRESULT) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.scm.ScmResult';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(projectdependency_id)+1 from PROJECTDEPENDENCY) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.project.ProjectDependency';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(id)+1 from BUILDDEFINITIONTEMPLATE) WHERE SEQUENCE_NAME='org.apache.maven.continuum.model.project.BuildDefinitionTemplate';
UPDATE SEQUENCE_TABLE set NEXT_VAL = (select max(id)+1 from ABSTRACTPURGECONFIGURATION) WHERE SEQUENCE_NAME='org.apache.continuum.model.repository.AbstractPurgeConfiguration';
+-----------------------------------------+

        []

        Now you can start your new version of Continuum.
  