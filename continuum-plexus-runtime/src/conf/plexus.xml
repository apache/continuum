<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<plexus>
  <load-on-start>
    <!-- MUST come before agent (inserted by appserver plugin) since that will try and boot the services -->
    <component>
      <role>org.codehaus.plexus.naming.Naming</role>
      <role-hint>dataSources</role-hint>
    </component>
    <component>
      <role>org.codehaus.plexus.contextualizer.Contextualizer</role>
      <role-hint>jettyConfiguration</role-hint>
    </component>
  </load-on-start>
  <components>
    <component>
      <role>org.codehaus.plexus.naming.Naming</role>
      <implementation>org.codehaus.plexus.naming.DefaultNaming</implementation>
      <role-hint>dataSources</role-hint>
      <configuration>
        <resources>
          <!-- START SNIPPET: mail -->
          <!--
               Mail Session
          -->
          <resource>
            <name>mail/Session</name>
            <type>javax.mail.Session</type>
            <properties>
              <property>
                <name>mail.smtp.host</name>
                <value>localhost</value>
              </property>
              <property>
                <name>mail.smtp.port</name>
                <value>25</value>
              </property>

              <!--
              <property> 
                <name>mail.smtp.auth</name>
                <value>true</value>
              </property>
              <property>
                <name>mail.smtp.user</name>
                <value>your_login</value>
              </property>
              <property>
                <name>password</name>
                <value>your_password</value>
              </property>
              <property>
                <name>mail.smtp.debug</name>
                <value>true</value>
              </property>
              <property>
                <name>mail.smtp.starttls.enable</name>
                <value>true</value>
              </property>
              <property>
                <name>mail.smtp.socketFactory.class</name>
                <value>javax.net.ssl.SSLSocketFactory</value>
              </property>
              -->
            </properties>
          </resource>
          <!-- END SNIPPET: mail -->
          <!-- START SNIPPET: datasources -->
          <!--
               Datasources
          -->
          <resource>
            <name>jdbc/users</name>
            <type>javax.sql.DataSource</type>
            <properties>
              <property>
                <name>factory</name>
                <value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
              </property>

              <!-- Maximum number of dB connections in pool. Make sure you
                   configure your mysqld max_connections large enough to handle
                   all of your db connections. Set to 0 for no limit.
                   -->
              <property>
                <name>maxActive</name>
                <value>100</value>
              </property>

              <!-- Maximum number of idle dB connections to retain in pool.
                   Set to 0 for no limit.
                   -->
              <property>
                <name>maxIdle</name>
                <value>30</value>
              </property>

              <!-- Maximum time to wait for a dB connection to become available
                   in ms, in this example 10 seconds. An Exception is thrown if
                   this timeout is exceeded.  Set to -1 to wait indefinitely.
                   -->
              <property>
                <name>maxWait</name>
                <value>10000</value>
              </property>

              <property>
                <name>driverClassName</name>
                <value>org.apache.derby.jdbc.EmbeddedDriver</value>
              </property>
              <property>
                <name>url</name>
                <value>jdbc:derby:${plexus.home}/data/users/database;create=true</value>
              </property>
              <property>
                <name>username</name>
                <value>sa</value>
              </property>
              <property>
                <name>password</name>
                <value></value>
              </property>
            </properties>
          </resource>
          <resource>
            <name>jdbc/continuum</name>
            <type>javax.sql.DataSource</type>
            <properties>
              <property>
                <name>factory</name>
                <value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
              </property>

              <!-- Maximum number of dB connections in pool. Make sure you
                   configure your mysqld max_connections large enough to handle
                   all of your db connections. Set to 0 for no limit.
                   -->
              <property>
                <name>maxActive</name>
                <value>100</value>
              </property>

              <!-- Maximum number of idle dB connections to retain in pool.
                   Set to 0 for no limit.
                   -->
              <property>
                <name>maxIdle</name>
                <value>30</value>
              </property>

              <!-- Maximum time to wait for a dB connection to become available
                   in ms, in this example 10 seconds. An Exception is thrown if
                   this timeout is exceeded.  Set to -1 to wait indefinitely.
                   -->
              <property>
                <name>maxWait</name>
                <value>10000</value>
              </property>

              <property>
                <name>driverClassName</name>
                <value>org.apache.derby.jdbc.EmbeddedDriver</value>
              </property>
              <property>
                <name>url</name>
                <value>jdbc:derby:${plexus.home}/data/continuum/database;create=true</value>
              </property>
              <property>
                <name>username</name>
                <value>sa</value>
              </property>
              <property>
                <name>password</name>
                <value></value>
              </property>
            </properties>
          </resource>
          <!-- END SNIPPET: datasources -->
        </resources>
      </configuration>
    </component>
    <!-- START SNIPPET: jetty_port -->
    <component>
      <role>org.codehaus.plexus.contextualizer.Contextualizer</role>
      <role-hint>jettyConfiguration</role-hint>
      <implementation>org.codehaus.plexus.contextualizer.DefaultContextualizer</implementation>
      <configuration>
        <contextValues>
          <jetty.port>8080</jetty.port>
        </contextValues>
      </configuration>
    </component>
    <!-- END SNIPPET: jetty_port -->
    <!--component>
      <role>org.codehaus.plexus.logging.LoggerManager</role>
      <implementation>org.codehaus.plexus.logging.console.ConsoleLoggerManager</implementation>
      <lifecycle-handler>basic</lifecycle-handler>
      <configuration>
        <threshold>DEBUG</threshold>
      </configuration>
    </component-->    
  </components>
</plexus>

