<plexus>
  <load-on-start>
    <component>
      <role>org.apache.maven.continuum.Continuum</role>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>build-project</role-hint>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>check-out-project</role-hint>
    </component>
    <component>
      <role>org.apache.maven.continuum.web.xmlrpc.XmlRpcService</role>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>prepare-release</role-hint>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>perform-release</role-hint>
    </component>
  </load-on-start>

  <components>
    <!--
    | The XML-RPC service
    |-->
    <component>
      <role>org.apache.maven.continuum.web.xmlrpc.XmlRpcService</role>
      <implementation>org.apache.maven.continuum.web.xmlrpc.DefaultXmlRpcService</implementation>
      <description></description>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.xmlrpc.XmlRpcServer</role>
          <field-name>xmlRpcServer</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.xmlrpc.ContinuumXmlRpc</role>
          <field-name>handler</field-name>
        </requirement>
      </requirements>
      <configuration>
        <port>8000</port>
        <handler-name>continuum</handler-name>
      </configuration>
    </component>

    <!--
    | The mail notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>mail</role-hint>
      <implementation>org.apache.maven.continuum.notification.mail.MailContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.velocity.VelocityComponent</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.mailsender.MailSender</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
      </requirements>
      <configuration>
        <from-mailbox></from-mailbox>
        <from-name></from-name>
        <timestamp-format>EEE, d MMM yyyy HH:mm:ss Z</timestamp-format>
        <includeBuildResult>true</includeBuildResult>
        <alwaysSend>false</alwaysSend>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.notification.RecipientSource</role>
      <implementation>org.apache.maven.continuum.notification.ContinuumRecipientSource</implementation>
      <configuration>
        <!--
        Setting this propery will make Continuum send all emails to
        this address instead the address specified in the project
        configuration
        -->
        <to-override>${mail.override.to.address}</to-override>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.mailsender.MailSender</role>
      <implementation>org.codehaus.plexus.mailsender.javamail.JavamailMailSender</implementation>
      <configuration>
        <smtp-host>localhost</smtp-host>
        <smtp-port>25</smtp-port>
        <sslProvider>com.sun.net.ssl.internal.ssl.Provider</sslProvider>
        <!--
        <username>mylogin</username>
        <password>mypassword</password>
        <sslMode>true</sslMode>
        -->
      </configuration>
    </component>

    <!--
    | The irc notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>irc</role-hint>
      <implementation>org.apache.maven.continuum.notification.irc.IrcContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.ircbot.IrcBot</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
      </requirements>
      <configuration>
        <alwaysSend>false</alwaysSend>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.ircbot.IrcBot</role>
      <implementation>org.codehaus.plexus.ircbot.DefaultIrcClient</implementation>
    </component>

    <!--
    | The jabber notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>jabber</role-hint>
      <implementation>org.apache.maven.continuum.notification.jabber.JabberContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.jabber.JabberClient</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
      </requirements>
      <configuration>
        <alwaysSend>false</alwaysSend>
        <!-- from-address/>
        <from-password/>
        <host/>
        <port/>
        <sslConnection>true</sslConnection -->
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.jabber.JabberClient</role>
      <implementation>org.codehaus.plexus.jabber.DefaultJabberClient</implementation>
    </component>

    <!--
    | The MSN notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>msn</role-hint>
      <implementation>org.apache.maven.continuum.notification.msn.MsnContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.msn.MsnClient</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
      </requirements>
      <configuration>
        <alwaysSend>false</alwaysSend>
        <!-- from-address/>
        <from-password/ -->
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.msn.MsnClient</role>
      <implementation>org.codehaus.plexus.msn.DefaultMsnClient</implementation>
    </component>

    <!--
    | Velocity component used by the mail notifier
    |-->
    <component>
      <role>org.codehaus.plexus.velocity.VelocityComponent</role>
      <implementation>org.codehaus.plexus.velocity.DefaultVelocityComponent</implementation>
      <configuration>
        <properties>
          <property>
            <name>resource.loader</name>
            <value>threadContext</value>
          </property>
          <property>
            <name>threadContext.resource.loader.class</name>
            <value>org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader</value>
          </property>
          <property>
            <name>velocimacro.library</name>
            <value>org/apache/maven/continuum/notification/mail/templates/common.vm</value>
          </property>
        </properties>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.continuum.web.util.WorkingCopyContentGenerator</role>
      <implementation>org.apache.maven.continuum.web.util.WorkingCopyContentGenerator</implementation>
    </component>

    <component>
      <role>org.codehaus.plexus.formica.validation.Validator</role>
      <role-hint>url</role-hint>
      <implementation>org.codehaus.plexus.formica.validation.UrlValidator</implementation>
      <configuration>
        <allowedSchemes>
          <allowedScheme>http</allowedScheme>
          <allowedScheme>https</allowedScheme>
          <allowedScheme>ftp</allowedScheme>
          <!-- <allowedScheme>file</allowedScheme> -->
        </allowedSchemes>
      </configuration>
    </component>


    <component>
      <role>org.codehaus.plexus.jdo.JdoFactory</role>

      <implementation>org.codehaus.plexus.jdo.DataSourceConfigurableJdoFactory</implementation>

      <role-hint>continuum</role-hint>

      <configuration>


        <connectionFactoryName>java:comp/env/jdbc/continuum</connectionFactoryName>
        <shutdownConnectionFactoryName>java:comp/env/jdbc/continuum_shutdown</shutdownConnectionFactoryName>

        <persistenceManagerFactoryClass>org.jpox.PersistenceManagerFactoryImpl</persistenceManagerFactoryClass>

        <otherProperties>
          <property>
            <name>org.jpox.autoCreateSchema</name>
            <value>true</value>
          </property>
          <property>
            <name>org.jpox.validateTables</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateColumns</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateConstraints</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.autoStartMechanism</name>
            <value>None</value>
          </property>
          <property>
            <name>org.jpox.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.validateTables</name>
            <value>false</value>
          </property>
        </otherProperties>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.jdo.JdoFactory</role>
      <role-hint>users</role-hint>
      <implementation>org.codehaus.plexus.jdo.DataSourceConfigurableJdoFactory</implementation>
      <configuration>

        <connectionFactoryName>java:comp/env/jdbc/users</connectionFactoryName>
        <shutdownConnectionFactoryName>java:comp/env/jdbc/users_shutdown</shutdownConnectionFactoryName>

        <!-- JPOX and JDO configuration -->
        <persistenceManagerFactoryClass>org.jpox.PersistenceManagerFactoryImpl</persistenceManagerFactoryClass>
        <otherProperties>
          <property>
            <name>org.jpox.autoCreateSchema</name>
            <value>true</value>
          </property>
          <property>
            <name>org.jpox.validateTables</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateColumns</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateConstraints</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.autoStartMechanism</name>
            <value>None</value>
          </property>
          <property>
            <name>org.jpox.poid.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.rdbms.dateTimezone</name>
            <value>JDK_DEFAULT_TIMEZONE</value>
          </property>
        </otherProperties>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.rememberme.RememberMeServices</role>
      <implementation>org.apache.maven.continuum.web.rememberme.DefaultRememberMeServices</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
    </component>

    <!--
     | Logger manager
     -->
    <component>
      <role>org.codehaus.plexus.logging.LoggerManager</role>
      <implementation>org.codehaus.plexus.logging.log4j.Log4JLoggerManager</implementation>
      <lifecycle-handler>basic</lifecycle-handler>

      <configuration>
        <threshold>INFO</threshold>
        <default-appender>console,rolling</default-appender>
        <appenders>
          <appender>
            <id>console</id>
            <threshold>DEBUG</threshold>
            <type>org.apache.log4j.ConsoleAppender</type>
            <conversion-pattern>%d [%t] %-5p %-30c{1} - %m%n</conversion-pattern>
          </appender>

          <appender>
            <id>rolling</id>
            <threshold>DEBUG</threshold>
            <type>org.apache.log4j.RollingFileAppender</type>
            <conversion-pattern>%-4r [%t] %-5p %c %x - %m%n</conversion-pattern>

            <properties>
              <property>
                <name>file</name>
                <value>${plexus.home}/logs/continuum.log</value>
              </property>
              <property>
                <name>append</name>
                <value>true</value>
              </property>
              <property>
                <name>maxBackupIndex</name>
                <value>10</value>
              </property>
              <property>
                <name>maxFileSize</name>
                <value>10MB</value>
              </property>
            </properties>
          </appender>
        </appenders>
        <levels>
          <level>
            <hierarchy>org.apache.maven.continuum.project.builder.ContinuumProjectBuilder</hierarchy>
            <level>DEBUG</level>
          </level>
          <level>
            <hierarchy>org.apache.maven.continuum.execution.maven.m2.DefaultMavenBuilderHelper</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.velocity</hierarchy>
            <level>WARN</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.mailsender.MailSender</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>JPOX</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>JPOX.Cache</hierarchy>
            <level>WARN</level>
          </level>
          <level>
            <hierarchy>org.apache.jasper</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.xwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.webwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.extremecomponents</hierarchy>
            <level>INFO</level>
          </level>
        </levels>
      </configuration>
    </component>


    <!-- plexus security components -->
            <component>
      <role>org.codehaus.plexus.security.system.ApplicationDetails</role>
      <implementation>org.codehaus.plexus.security.system.DefaultApplicationDetails</implementation>
      <description>DefaultApplicationDetails</description>
      <configuration>
        <application-name>Unconfigured Application Name</application-name>
        <!-- Do not include the trailing '/' on the url. -->
        <application-url>http://localhost:9090</application-url>
        <timestamp-format>EEE, d MMM yyyy HH:mm:ss Z</timestamp-format>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.system.EmailSettings</role>
      <implementation>org.codehaus.plexus.security.system.DefaultEmailSettings</implementation>
      <description>DefaultEmailSettings</description>
      <configuration>
        <feedback>/feedback.action</feedback>
        <from-address>security@unconfigured.com</from-address>
        <from-username>Unconfigured Username</from-username>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.system.SecuritySystem</role>
      <implementation>org.codehaus.plexus.security.system.DefaultSecuritySystem</implementation>
      <role-hint>default</role-hint>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.authentication.AuthenticationManager</role>
          <role-hint>default</role-hint>
          <field-name>authnManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.authorization.Authorizer</role>
          <role-hint>rbac</role-hint>
          <field-name>authorizer</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.keys.KeyManager</role>
          <role-hint>jdo</role-hint>
          <field-name>keyManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.UserSecurityPolicy</role>
          <role-hint>default</role-hint>
          <field-name>policy</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.system.ApplicationDetails</role>
          <field-name>applicationDetails</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.system.EmailSettings</role>
          <field-name>emailSettings</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.security.authorization.Authorizer</role>
      <role-hint>rbac</role-hint>
      <implementation>org.codehaus.plexus.security.authorization.rbac.RbacAuthorizer</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.rbac.RBACManager</role>
          <role-hint>jdo</role-hint>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.authorization.rbac.evaluator.PermissionEvaluator</role>
          <role-hint>default</role-hint>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>character-length</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.CharacterLengthPasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty passwords that have between {@link #setMinimumCharacters(int)} and {@link #setMaximumCharacters(int)} characters in length.</description>
      <configuration>
        <enabled>true</enabled>
        <minimum-characters>1</minimum-characters>
        <maximum-characters>8</maximum-characters>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>reuse</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.ReusePasswordRule</implementation>
      <description>Password Rule, Checks supplied password found at {@link User#getPassword()} against the {@link User#getPreviousEncodedPasswords()} to ensure that a password is not reused.</description>
      <configuration>
        <enabled>true</enabled>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>numerical-count</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.NumericalPasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty passwords that have at least {@link #setMinimumCount(int)} of numerical characters contained within.</description>
      <configuration>
        <enabled>true</enabled>
        <minimum-count>1</minimum-count>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>must-have</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.MustHavePasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty Passwords in non guest users.</description>
      <configuration>
        <enabled>true</enabled>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>alpha-count</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.AlphaPasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty passwords that have at least {@link #setMinimumCount(int)} of alpha characters contained within.</description>
      <configuration>
        <enabled>true</enabled>
        <minimum-count>1</minimum-count>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.policy.UserSecurityPolicy</role>
      <role-hint>default</role-hint>
      <implementation>org.codehaus.plexus.security.policy.DefaultUserSecurityPolicy</implementation>
      <description>User Security Policy.</description>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.policy.PasswordEncoder</role>
          <role-hint>sha256</role-hint>
          <field-name>passwordEncoder</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.UserValidationSettings</role>
          <field-name>userValidationSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.PasswordRule</role>
          <field-name>rules</field-name>
        </requirement>
         <requirement>
          <role>org.codehaus.plexus.security.policy.RememberMeSettings</role>
          <field-name>rememberMeSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.SingleSignOnSettings</role>
          <field-name>singleSignOnSettings</field-name>
        </requirement>
      </requirements>
      <configuration>
        <previous-passwords-count>6</previous-passwords-count>
        <login-attempt-count>3</login-attempt-count>
        <password-expiration-days>90</password-expiration-days>
      </configuration>
    </component>

    <component>
         <role>org.codehaus.plexus.security.policy.RememberMeSettings</role>
         <implementation>org.codehaus.plexus.security.policy.DefaultRememberMeSettings</implementation>
         <description>DefaultRememberMeSettings</description>
         <configuration>
           <enabled>true</enabled>
           <cookie-timeout>525600</cookie-timeout>
         </configuration>
       </component>

       <component>
         <role>org.codehaus.plexus.security.policy.SingleSignOnSettings</role>
         <implementation>org.codehaus.plexus.security.policy.DefaultSingleSignOnSettings</implementation>
         <description>DefaultSingleSignOnSettings</description>
         <configuration>
           <enabled>true</enabled>
           <cookie-timeout>30</cookie-timeout>
           <cookie-domain>localhost</cookie-domain>
         </configuration>
       </component>

    <component>
      <role>org.codehaus.plexus.security.policy.UserValidationSettings</role>
      <implementation>org.codehaus.plexus.security.policy.DefaultUserValidationSettings</implementation>
      <description>DefaultUserValidationSettings</description>
      <configuration>
        <email-validation-required>false</email-validation-required>
        <!-- This is a timeout for the validation url (in minutes) - 2880 = 48 hours -->
        <email-validation-timeout>2880</email-validation-timeout>
        <email-login-path>/security/login!login.action</email-login-path>
        <email-subject>Unconfigured Subject Line</email-subject>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.mailsender.MailSender</role>
      <implementation>org.codehaus.plexus.mailsender.javamail.JavamailMailSender</implementation>
      <configuration>
        <smtp-host>localhost</smtp-host>
        <smtp-port>25</smtp-port>
        <sslProvider>com.sun.net.ssl.internal.ssl.Provider</sslProvider>
        <!--
        <username>mylogin</username>
        <password>mypassword</password>
        <sslMode>true</sslMode>
        -->
      </configuration>
    </component>

  </components>

</plexus>
