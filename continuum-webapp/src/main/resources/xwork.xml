<!DOCTYPE xwork PUBLIC "-//OpenSymphony Group//XWork 1.1.1//EN" "http://www.opensymphony.com/xwork/xwork-1.1.1.dtd">

<xwork>
  <include file="webwork-default.xml"/>

  <!-- Include plexus-security xwork configurations. -->  
  <include file="xwork-security.xml" />


  <package name="default" extends="webwork-default">

    <interceptors>
      <interceptor name="exception-logging" class="exceptionLogging"/>
      <interceptor name="continuumConfigurationCheck" class="forceContinuumConfigurationInterceptor"/>
      <interceptor name="pssForceAdminUser" class="pssForceAdminUserInterceptor"/>
      <interceptor name="pssSecureActions" class="pssSecureActionInterceptor"/>
      <interceptor name="pssAutoLogin" class="pssAutoLoginInterceptor"/>
      <interceptor name="pssEnvironmentChecker" class="pssEnvironmentCheckInterceptor"/>
      
      <interceptor-stack name="configuredContinuumStack">
        <interceptor-ref name="defaultStack"/>
        <interceptor-ref name="exception-logging"/>
        <interceptor-ref name="pssEnvironmentChecker"/>
        <interceptor-ref name="pssForceAdminUser"/>
        <interceptor-ref name="pssAutoLogin"/>
        <interceptor-ref name="pssSecureActions"/>
        <interceptor-ref name="continuumConfigurationCheck"/>
        <interceptor-ref name="validation">
          <param name="excludeMethods">input,back,cancel,browse,edit</param>
        </interceptor-ref>
        <interceptor-ref name="workflow">
          <param name="excludeMethods">input,back,cancel,browse,edit</param>
        </interceptor-ref>
      </interceptor-stack>

      <interceptor-stack name="unconfiguredContinuumStack">
        <interceptor-ref name="defaultStack"/>
        <interceptor-ref name="exception-logging"/>
        <interceptor-ref name="pssEnvironmentChecker"/>
        <interceptor-ref name="pssForceAdminUser"/>
        <interceptor-ref name="pssAutoLogin"/>
        <interceptor-ref name="pssSecureActions"/>
        <interceptor-ref name="validation">
          <param name="excludeMethods">input,back,cancel,browse,edit</param>
        </interceptor-ref>
        <interceptor-ref name="workflow">
          <param name="excludeMethods">input,back,cancel,browse,edit</param>
        </interceptor-ref>
      </interceptor-stack>
    </interceptors>

    <default-interceptor-ref name="configuredContinuumStack"/>

    <global-results>

      <result name="error">/error.jsp</result>
      <result name="internal-error">/error.jsp</result>
      <result name="internalError" type="redirect">/error.jsp</result>
      
      <result name="continuum-configuration-required" type="redirect-action">
        <param name="actionName">configuration</param>
        <param name="method">input</param>
      </result>

       <!-- The following security-* result names arrive from the plexus-security package -->
      <result name="security-login-success" type="redirect-action">groupSummary</result>
      <result name="security-login-cancel" type="redirect-action">groupSummary</result>
      <result name="security-login-locked" type="redirect-action">
        <param name="actionName">groupSummary</param>
        <param name="namespace">/</param>
        <param name="infoMessage">Account Locked</param> 
      </result>
      
      <result name="security-logout" type="redirect-action">groupSummary</result>
      <result name="requires-authentication" type="redirect-action">
        <param name="actionName">login</param>
        <param name="namespace">/security</param>
      </result>
      <result name="security-register-success" type="redirect-action">
        <param name="actionName">login</param>
        <param name="namespace">/security</param>
      </result>
      <result name="security-register-cancel" type="redirect-action">
        <param name="actionName">login</param>
        <param name="namespace">/security</param>
      </result>
      <result name="security-account-success" type="redirect-action">groupSummary</result>
      <result name="security-account-cancel" type="redirect-action">
        <param name="actionName">login</param>
        <param name="namespace">/security</param>
      </result>
      <result name="security-admin-user-created" type="redirect-action">
        <param name="actionName">login</param>
        <param name="namespace">/security</param>
      </result>
      <result name="security-admin-user-needed" type="redirect-action">
        <param name="actionName">addadmin</param>
        <param name="namespace">/security</param>
      </result>
    </global-results>

    <global-exception-mappings>
      <exception-mapping exception="org.apache.maven.continuum.initialization.ContinuumInitializationException" result="continuumInitialization"/>
      <exception-mapping exception="java.lang.Exception" result="error-internal"/>
    </global-exception-mappings>

    <!-- This is the redirection facility for plexus-security,
             allowing plexus-security to call out from its own set of actions
             into the application webapp, using global result names. -->
    <action name="pssRedirect" class="pss-redirect" method="redirect">
      <result type="redirect-action">groupSummary</result>
    </action>


    <action name="configuration" class="configuration">
      <interceptor-ref name="unconfiguredContinuumStack"/>
      <result name="input">/configurationEdit.jsp</result>
      <result name="success">/configuration.jsp</result>
    </action>
   
    <action name="companyInfo" class="configuration">
      <result name="success">/components/companyLogo.jsp</result>
    </action>

    <action name="summary" class="summary">
      <result name="success">/summary.jsp</result>
    </action>

    <action name="groupSummary" class="groupSummary">
      <result name="success">/groupSummary.jsp</result>
    </action>

    <action name="addMavenTwoProject" class="addMavenTwoProject">
      <result name="input">/addMavenTwoProject.jsp</result>
      <result name="success" type="chain">groupSummary</result>
    </action>

    <action name="addMavenOneProject" class="addMavenOneProject">
      <result name="input">/addMavenOneProject.jsp</result>
      <result name="success" type="chain">groupSummary</result>
    </action>

    <action name="addProjectInput" class="addProject" method="input">
      <result name="success">/addProject.jsp</result>
    </action>

    <action name="addProject" class="addProject" method="add">
      <result name="input">/addProject.jsp</result>
      <result name="success" type="chain">groupSummary</result>
    </action>

    <action name="deleteProject" class="deleteProject">
      <result name="delete">/deleteProject.jsp</result>
      <result name="success" type="chain">groupSummary</result>
    </action>

    <action name="buildProject" class="buildProject">
      <result name="success" type="chain">projectGroupSummary</result>
    </action>

    <action name="projectView" class="projectView">
      <result name="success">/projectView.jsp</result>
    </action>

    <action name="projectEdit" class="projectEdit" method="edit">
      <result name="success">/projectEdit.jsp</result>
    </action>

    <action name="projectSave" class="projectEdit" method="save">
      <result name="input">/projectEdit.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <!--
    * build definition actions
    -->
    <action name="buildDefinition" class="buildDefinition" method="input">
      <result name="success">/buildDefinitionEdit.jsp</result>
    </action>

    <action name="saveProjectBuildDefinition" class="buildDefinition" method="saveToProject">
      <result name="input">/buildDefinitionEdit.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <action name="removeProjectBuildDefinition" class="buildDefinition" method="removeFromProject">
      <result name="confirm">/deleteBuildDefinition.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <action name="saveGroupBuildDefinition" class="buildDefinition" method="saveToGroup">
      <result name="success" type="chain">projectGroupBuildDefinition</result>
    </action>

    <action name="removeGroupBuildDefinition" class="buildDefinition" method="removeFromProjectGroup">
      <result name="confirm">/confirmBuildDefinitionRemoval.jsp</result>
      <result name="success" type="chain">projectGroupBuildDefinition</result>
    </action>


    <!--
    * project group actions
    -->
    <action name="projectGroupSummary" class="projectGroup" method="summary">
      <result name="success">/projectGroupSummary.jsp</result>
    </action>

    <action name="projectGroupMembers" class="projectGroup" method="members">
      <result name="success">/projectGroupMembers.jsp</result>
    </action>

    <action name="projectGroupBuildDefinition" class="projectGroup" method="buildDefinitions">
      <result name="success">/projectGroupBuildDefinition.jsp</result>
    </action>

    <action name="projectGroupNotifier" class="projectGroup" method="notifiers">
      <result name="success">/projectGroupNotifier.jsp</result>
    </action>

    <action name="buildProjectGroup" class="projectGroup" method="build">
      <result name="success" type="chain">projectGroupSummary</result>
    </action>

    <action name="removeProjectGroup" class="projectGroup" method="remove">
      <result name="confirm">/confirmGroupRemoval.jsp</result>
      <result name="success" type="redirect-action">
        <param name="actionName">groupSummary</param>
      </result>
    </action>

    <!--
    * notifier actions
    -->
    <action name="deleteNotifier" class="deleteNotifier">
      <result name="delete">/deleteNotifier.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <action name="addNotifier" class="addNotifier">
      <result name="input">/notifierSelectType.jsp</result>
      <result name="mail_input">/notifierMail.jsp</result>
      <result name="irc_input">/notifierIrc.jsp</result>
      <result name="msn_input">/notifierMsn.jsp</result>
      <result name="jabber_input">/notifierJabber.jsp</result>
    </action>

    <action name="mailNotifierEdit" class="mailNotifierEdit" method="edit">
      <result name="success">/notifierMail.jsp</result>
    </action>

    <action name="mailNotifierSave" class="mailNotifierEdit" method="save">
      <result name="input">/notifierMail.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <action name="ircNotifierEdit" class="ircNotifierEdit" method="edit">
      <result name="success">/notifierIrc.jsp</result>
    </action>

    <action name="ircNotifierSave" class="ircNotifierEdit" method="save">
      <result name="input">/notifierIrc.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <action name="jabberNotifierEdit" class="jabberNotifierEdit" method="edit">
      <result name="success">/notifierJabber.jsp</result>
    </action>

    <action name="jabberNotifierSave" class="jabberNotifierEdit" method="save">
      <result name="input">/notifierJabber.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <action name="msnNotifierEdit" class="msnNotifierEdit" method="edit">
      <result name="success">/notifierMsn.jsp</result>
    </action>

    <action name="msnNotifierSave" class="msnNotifierEdit" method="save">
      <result name="input">/notifierMsn.jsp</result>
      <result name="success" type="chain">projectView</result>
    </action>

    <action name="buildResults" class="buildResults">
      <result name="success">/buildResults.jsp</result>
    </action>

    <action name="buildResult" class="buildResult">
      <result name="success">/buildResult.jsp</result>
    </action>

    <action name="surefireReport" class="surefireReport">
      <result name="success">/surefireReport.jsp</result>
    </action>

    <action name="workingCopy" class="workingCopy">
      <result name="success">/workingCopy.jsp</result>
      <result name="stream" type="stream">
        <param name="contentType">application/octet-stream</param>
        <param name="contentDisposition">filename="${downloadFilename}"</param>
        <param name="contentLength">${fileLength}</param>
      </result>
    </action>

    <!--
    * schedule actions
    -->
    <action name="schedules" class="schedule" method="summary">
      <result name="success">/schedules.jsp</result>
    </action>

    <action name="schedule" class="schedule" method="input">
      <result name="success">/editSchedule.jsp</result>
    </action>

    <action name="saveSchedule" class="schedule" method="save">
      <result name="input">/editSchedule.jsp</result>
      <result name="success" type="chain">schedules</result>
      <result name="error" type="chain">schedule</result>
    </action>
    <action name="removeSchedule" class="schedule" method="remove">
      <result name="confirm">/confirmation.jsp</result>
      <result name="success" type="chain">schedules</result>
    </action>

    <action name="cancelBuild" class="cancelBuild">
      <result name="success" type="chain">buildResults</result>
    </action>

    <!--
    - continuum release
    -->
    <action name="releasePromptGoal" class="releaseProject" method="promptReleaseGoal">
      <result name="success">/releaseProject.jsp</result>
    </action>

    <action name="releaseProject" class="releaseProject">
      <result name="prepareRelease" type="redirect-action">
        <param name="actionName">releasePrepareInput</param>
        <param name="projectId">${projectId}</param>
      </result>
      <result name="performRelease" type="redirect-action">
        <param name="actionName">releasePerformInput</param>
        <param name="projectId">${projectId}</param>
        <param name="releaseId">${preparedReleaseId}</param>
      </result>
      <result name="performReleaseFromScm" type="redirect-action">
        <param name="actionName">releasePerformFromScmInput</param>
        <param name="projectId">${projectId}</param>
      </result>
    </action>

    <action name="releasePrepareInput" class="releasePrepare" method="input">
      <result name="success">/releasePrepare.jsp</result>
    </action>

    <action name="releasePrepare" class="releasePrepare">
      <result name="input" type="chain">releasePrepareInput</result>
      <result name="success" type="redirect-action">
        <param name="actionName">releaseInProgress</param>
        <param name="releaseId">${releaseId}</param>
        <param name="projectId">${projectId}</param>
      </result>
    </action>

    <action name="releasePerformInput" class="releasePerform" method="input">
      <result name="success">/releasePerform.jsp</result>
    </action>

    <action name="releasePerform" class="releasePerform">
      <result name="input" type="chain">releasePerformInput</result>
      <result name="success" type="redirect-action">
        <param name="actionName">releaseInProgress</param>
        <param name="releaseId">${releaseId}</param>
        <param name="projectId">${projectId}</param>
      </result>
    </action>

    <action name="releasePerformFromScmInput" class="releasePerform" method="inputFromScm">
      <result name="success">/releasePerformFromScm.jsp</result>
    </action>

    <action name="releasePerformFromScm" class="releasePerform" method="executeFromScm">
      <result name="input" type="chain">releasePerformFromScmInput</result>
      <result name="success" type="redirect-action">
        <param name="actionName">releaseInProgress</param>
        <param name="projectId">${projectId}</param>
      </result>
    </action>

    <action name="releaseInProgress" class="releaseInProgress">
      <result name="initialized">/releaseInitialized.jsp</result>
      <result name="inProgress">/releaseInProgress.jsp</result>
      <result name="success">/releaseFinished.jsp</result>
    </action>

    <action name="releaseCleanup" class="releaseCleanup">
      <result name="prepareFinished" type="chain">releasePromptGoal</result>
      <result name="performFinished" type="chain">groupSummary</result>
    </action>

    <action name="releaseViewResult" class="releaseInProgress" method="viewResult">
      <result name="success">/releaseViewResult.jsp</result>
    </action>

  </package>

  <package name="component" extends="default">
    <!--
    * component actions
    -->
    <action name="buildDefinitionSummary" class="buildDefinitionSummary" method="summarizeForProject">
      <result name="success">/components/buildDefinitionSummaryComponent.jsp</result>
      <result name="error">/components/failureComponent.jsp</result>
    </action>

    <action name="groupBuildDefinitionSummary" class="buildDefinitionSummary" method="summarizeForGroup">
      <result name="success">/components/buildDefinitionGroupSummaryComponent.jsp</result>
      <result name="error">/components/failureComponent.jsp</result>
    </action>

    <action name="projectGroupTab" class="continuumTab">
      <result name="success">/components/projectGroupTabComponent.jsp</result>
      <result name="error">/components/failureComponent.jsp</result>
    </action>

    <action name="projectSummary" class="summary">
      <result name="success">/components/projectSummaryComponent.jsp</result>
      <result name="error">/components/failureComponent.jsp</result>
    </action>
  </package>
</xwork>
